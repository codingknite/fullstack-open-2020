{"version":3,"sources":["services/person.js","components/Filter.js","components/Header.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","object","put","delete","Filter","nameFilter","filterHandler","onSubmit","onChange","Header","header","PersonForm","submitHandler","nameValue","numberValue","personHandler","numberHandler","value","type","Notification","name","style","border","padding","backgroundColor","color","App","useState","persons","setPersons","newName","setNewName","number","setNumber","setNameFilter","message","setMessage","useEffect","contactService","returnedObject","filterNames","filter","person","toLowerCase","includes","filteredNames","event","target","preventDefault","ID","existingPersons","map","existingNumbers","window","confirm","updatedDB","theID","concat","catch","error","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1882283.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n        return response.data\r\n    });\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, object) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, object);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteItem = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data);\r\n}\r\nexport default { getAll, create, update, deleteItem }","import React from 'react'\r\n\r\nconst Filter = ({ nameFilter, filterHandler }) => {\r\n    return (\r\n        <form onSubmit={nameFilter}>\r\n            <div>\r\n                Filter Names By: <input onChange={filterHandler} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Header = ({ header }) => {\r\n    return <h2>{header}</h2>;\r\n};\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst PersonForm = ({ submitHandler, nameValue, numberValue, personHandler, numberHandler }) => {\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div>\r\n                name: <input value={nameValue} onChange={personHandler} />\r\n            </div>\r\n            <div>\r\n                Number: <input value={numberValue} onChange={numberHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Notification = ({ name }) => {\r\n  if (name === null) {\r\n    return null;\r\n  }\r\n\r\n  const notification = {\r\n    border: '2px solid green',\r\n    padding: 8,\r\n    backgroundColor: 'gray',\r\n  };\r\n\r\n  const notificationP = {\r\n    color: 'green',\r\n  };\r\n\r\n  return (\r\n    <div style={notification}>\r\n      <p style={notificationP}>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport contactService from './services/person';\r\nimport Filter from './components/Filter';\r\nimport Header from './components/Header';\r\nimport PersonForm from './components/PersonForm';\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [nameFilter, setNameFilter] = useState('');\r\n    const [message, setMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        contactService\r\n            .getAll()\r\n            .then((returnedObject) => {\r\n                setPersons(returnedObject);\r\n            });\r\n    }, []);\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault();\r\n        const existingPersons = persons.map((person) => person.name);\r\n        const existingNumbers = persons.map((person) => person.number);\r\n\r\n        if (\r\n            !existingPersons.includes(newName) &&\r\n            !existingNumbers.includes(number)\r\n        ) {\r\n            const newPerson = {\r\n                name: newName,\r\n                number: number,\r\n            };\r\n            contactService\r\n                .create(newPerson)\r\n                .then((newObject) => {\r\n                    setPersons(persons.concat(newObject));\r\n                    setMessage(`Added ${newObject.name}`)\r\n                })\r\n                .catch(error => {\r\n                    setMessage(`${error}`)\r\n                })\r\n        } else {\r\n            let ID;\r\n            if (\r\n                window.confirm(\r\n                    `${newName} is already added in the phonebook, replace the old number?`\r\n                )\r\n            ) {\r\n                persons.map((person) => {\r\n                    if (person.name === newName || person.number === number) {\r\n                        ID = person.id;\r\n                    }\r\n                });\r\n                const newPerson = {\r\n                    name: newName,\r\n                    number: number,\r\n                };\r\n                contactService\r\n                    .update(ID, newPerson)\r\n                    .then((updatedDB) => {\r\n                        persons.map((person) => {\r\n                            if (person.name === updatedDB.name) {\r\n                                const theID = person.id;\r\n                                const copyPersons = { ...persons }\r\n                                copyPersons[theID - 1].number = updatedDB.number;\r\n                            }\r\n                        })\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    const deletePerson = (ID, name) => () => {\r\n        if (window.confirm(`Delete ${name} ?`)) {\r\n            contactService\r\n                .deleteItem(ID)\r\n        }\r\n    }\r\n\r\n    const handleNewPerson = (event) => {\r\n        setNewName(event.target.value);\r\n    };\r\n\r\n    const handleNewNumber = (event) => {\r\n        setNumber(event.target.value);\r\n    };\r\n\r\n    const filterNames = () =>\r\n        persons.filter((person) =>\r\n            person.name.toLowerCase().includes(nameFilter.toLowerCase())\r\n        );\r\n    const filteredNames = filterNames();\r\n\r\n    const handleNameFilter = (event) => {\r\n        setNameFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header header=\"Phonebook\" />\r\n            <Notification name={message} />\r\n            <Filter nameFilter={filterNames} filterHandler={handleNameFilter} />\r\n            <Header header=\"Add New Contact\" />\r\n            <PersonForm\r\n                submitHandler={addPerson}\r\n                nameValue={newName}\r\n                numberValue={number}\r\n                personHandler={handleNewPerson}\r\n                numberHandler={handleNewNumber}\r\n            />\r\n            <Header header=\"Numbers\" />\r\n            {filteredNames.map((person) => (\r\n                <p key={person.name}>\r\n                    {person.name} - {person.number}{' '}\r\n                    <button value={person.name} onClick={deletePerson(person.id, person.name)}>\r\n                        Delete\r\n          </button>\r\n                </p>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}